<class 'dict'> {'wandb': {'entity': 'loc_gsopt'}, 'problem': {'type': 'free', 'method': 'nelder', 'objective': 'maximize_contact_seconds', 'gs_num': 2, 'sat_num': 1}, 'scenario': {'constellations': 'ICEYE', 'teleport_sites': None}, 'constraints': {'dist_other_gs': 500000}, 'start_epoch': {'year': 2024, 'month': 5, 'day': 20, 'hour': 0, 'minute': 0, 'second': 0}, 'end_epoch': {'year': 2024, 'month': 5, 'day': 21, 'hour': 0, 'minute': 0, 'second': 0}, 'debug': {'verbose': True, 'plot': False}}
Loading the latest Earth Orientation Data
[2025-03-03 16:54:45,583][root][INFO] - Last TLE update: 2025-03-03T15:34:12.741660
[2025-03-03 16:54:45,584][root][INFO] - TLE data is 0 days old. TLE data is up to date.
[[ -60.          -85.        ]
 [ 151.2093      -33.8688    ]
 [-153.6789114    55.17076207]]
STARTING TO PERFORM MINIMIZATION ON GS: 1
Current optimization value:  -11340.316774
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -2722.0349109999997
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -4274.78751255643
penalty_water:  190.13863444357068
penalty_close_gs:  0
Current optimization value:  230.17668051867122
penalty_water:  2674.674970518671
penalty_close_gs:  0
Current optimization value:  -2658.4606940000003
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  14027.173181924976
penalty_water:  16530.442834924976
penalty_close_gs:  0
Current optimization value:  1110.7147024031792
penalty_water:  6759.838847403179
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Current optimization value:  -11505.714112
penalty_water:  0.0
penalty_close_gs:  0
Traceback (most recent call last):
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/src/main.py", line 94, in <module>
    main()
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           ^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            ^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          ^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
                       ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/src/main.py", line 74, in main
    gs_list,  gs_list_plot = nelder_mead_scipy(cfg,land_data,global_list_of_simplexes,epc_start,epc_end,satellites) # agg_list_of_simplexes
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/src/methods/free_select/nelder_mead_scipy.py", line 47, in nelder_mead_scipy
    result = minimize(cost_func,
            ^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/scipy/optimize/_minimize.py", line 726, in minimize
    res = _minimize_neldermead(fun, x0, args, callback, bounds=bounds,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/scipy/optimize/_optimize.py", line 909, in _minimize_neldermead
    fsim[j] = func(sim[j])
              ^^^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/.venv/lib/python3.11/site-packages/scipy/optimize/_optimize.py", line 542, in function_wrapper
    fx = function(np.copy(x), *(wrapper_args + args))
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/src/common/objective_functions.py", line 93, in cost_func
    contact_times, contact_times_seconds = compute_contact_times(satellites, temp_gs_list ,epc_start, epc_end, plot)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/Documents/School_Everything_and_LEARNING/Stanford/Githubs/loc-gsopt/src/common/utils.py", line 171, in compute_contact_times
    sat_results = pool.starmap(ba.find_location_accesses, sat_tasks)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/.local/share/uv/python/cpython-3.11.8-macos-aarch64-none/lib/python3.11/multiprocessing/pool.py", line 375, in starmap
    return self._map_async(func, iterable, starmapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/.local/share/uv/python/cpython-3.11.8-macos-aarch64-none/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/Users/gracekim/.local/share/uv/python/cpython-3.11.8-macos-aarch64-none/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/Users/gracekim/.local/share/uv/python/cpython-3.11.8-macos-aarch64-none/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/gracekim/.local/share/uv/python/cpython-3.11.8-macos-aarch64-none/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
